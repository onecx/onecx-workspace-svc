---
openapi: 3.0.3
info:
  title: onecx-portal service
  version: 1.0.0
servers:
  - url: "http://onecx-portal:8080"
tags:
  - name: microfrontend
  - name: portalImportRequest
  - name: portal
paths:
  /v1/microfrontends:
    get:
      tags:
        - microfrontend
      description: Returns a list of all micro-frontends.
      operationId: getMicrofrontends
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Microfrontend'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
  /v1/microfrontends/{id}:
    get:
      tags:
        - microfrontend
      description: Returns a microfrontend by ID.
      operationId: getMicrofrontendById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Microfrontend'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
  /v1/portals:
    post:
      tags:
        - portalImportRequest
      description: Trigger portal import feature
      operationId: portalImportRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportRequest'
      responses:
        "200":
          description: Import succeed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portal'
        "201":
          description: Create new portal
          headers:
            Location:
              required: true
              schema:
                type: string
                format: url
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
        "403":
          description: Not authorized
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
        "401":
          description: Not Authorized
  /v1/portals/current:
    get:
      tags:
        - portal
      description: "Load portal-, menu-, mfes- and theme-information by current Url"
      operationId: getPortalByUrl
      parameters:
        - name: url
          in: query
          required: true
          schema:
            type: string
            format: url
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalWrapper'
        "403":
          description: Forbidden
        "404":
          description: Not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
  /v1/portals/{portalName}:
    get:
      tags:
        - portal
      description: Load a single portal
      operationId: getPortal
      parameters:
        - name: portalName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portal'
        "403":
          description: Not authorized
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
  /v1/portals/{portalName}/menu:
    get:
      tags:
        - portal
      description: Fetch the menuItems of the portal in the tree structure
      operationId: getMenuStructureForPortalNameV1
      parameters:
        - name: portalName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PortalMenuItem'
        "401":
          description: Not authorized
        "404":
          description: Not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
components:
  schemas:
    Microfrontend:
      required:
        - remoteEntry
        - remoteName
        - exposedModule
        - displayName
        - moduleType
        - remoteBaseUrl
      type: object
      properties:
        version:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        remoteEntry:
          minLength: 2
          type: string
        remoteName:
          minLength: 2
          type: string
        exposedModule:
          minLength: 2
          type: string
        displayName:
          minLength: 2
          type: string
        moduleType:
          $ref: '#/components/schemas/ModuleType'
        wcTagName:
          type: string
        appId:
          type: string
        appVersion:
          type: string
        note:
          type: string
        contact:
          type: string
        remoteBaseUrl:
          minLength: 2
          type: string
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
    RestException:
      type: object
      properties:
        errorCode:
          type: string
        message:
          type: string
        parameters:
          type: array
          items:
            type: object
        namedParameters:
          type: object
          additionalProperties:
            type: object
        validations:
          type: array
          items:
            $ref: '#/components/schemas/ValidationConstraint'
    ValidationConstraint:
      type: object
      properties:
        parameter:
          type: string
        message:
          type: string
    PortalMenuItem:
      type: object
      properties:
        version:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        applicationId:
          type: string
        disabled:
          type: boolean
        portalName:
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
        position:
          format: int32
          type: integer
        badge:
          type: string
        portalExit:
          type: boolean
        parentItemId:
          type: string
        i18n:
          type: object
          additionalProperties:
            type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/PortalMenuItem'
        roles:
          type: array
          items:
            type: string
    Scope:
      enum:
        - WORKSPACE
        - APP
        - PAGE
      type: string
    ModuleType:
      enum:
        - ANGULAR
        - WEBCOMPONENT
      type: string
    PortalIdentifier:
      type: object
      properties:
        portalName:
          type: string
        tenantId:
          type: string
    PortalWrapper:
      type: object
      required:
        - portalDTO
      properties:
        portalDTO:
          $ref: '#/components/schemas/Portal'
        menuItemList:
          type: array
          items:
            $ref: '#/components/schemas/PortalMenuItem'
        microfrontends:
          type: array
          items:
            $ref: '#/components/schemas/Microfrontend'
        theme:
          $ref: '#/components/schemas/Theme'
    Portal:
      required:
        - portalName
        - themeName
        - themeId
        - baseUrl
      type: object
      properties:
        id:
          type: string
        portalName:
          minLength: 2
          type: string
        tenantId:
          type: string
        description:
          type: string
        themeName:
          minLength: 2
          type: string
        themeId:
          minLength: 2
          type: string
        homePage:
          type: string
        baseUrl:
          minLength: 2
          pattern: ^/.*
          type: string
        companyName:
          type: string
        address:
          $ref: '#/components/schemas/PortalAddress'
        phoneNumber:
          type: string
        rssFeedUrl:
          type: string
        footerLabel:
          type: string
        subjectLinks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SubjectLink'
        microfrontendRegistrations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MicrofrontendRegistration'
        imageUrls:
          uniqueItems: true
          type: array
          items:
            type: string
        portalRoles:
          type: array
          items:
            type: string
        logoUrl:
          type: string
        version:
          format: int32
          type: integer
    PortalAddress:
      type: object
      properties:
        street:
          type: string
        streetNo:
          type: string
        city:
          type: string
        country:
          type: string
        postalCode:
          type: string
    SubjectLink:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
    MicrofrontendRegistration:
      type: object
      properties:
        version:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        mfeId:
          type: string
        baseUrl:
          type: string
    SearchItemType:
      enum:
        - APPLICATION
      type: string
    ImportRequest:
      required:
        - portal
      type: object
      properties:
        portal:
          $ref: '#/components/schemas/PortalImport'
        menuItems:
          description: Menu Items structure imported with a portal
          type: array
          items:
            $ref: '#/components/schemas/MenuItemStructure'
        themeImportData:
          $ref: '#/components/schemas/ImportTheme'
    PortalImport:
      description: Portal data to be imported
      required:
        - portalName
      type: object
      properties:
        portalName:
          description: Name of the portal that should be created/updated
          minLength: 1
          type: string
        tenantId:
          description: "TenantId which will be set to Portal, when superAdmin Role\
            \ is assigned"
          type: string
        themeName:
          description: Theme name provided in a case when themeImportData is empty
          type: string
        description:
          type: string
        homePage:
          type: string
        baseUrl:
          type: string
        companyName:
          type: string
        address:
          $ref: '#/components/schemas/PortalAddress'
        phoneNumber:
          type: string
        rssFeedUrl:
          type: string
        footerLabel:
          type: string
        subjectLinks:
          maxItems: 3
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SubjectLink'
        microfrontendRegistrations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MicrofrontendRegistration'
        imageUrls:
          uniqueItems: true
          type: array
          items:
            type: string
        portalRoles:
          type: array
          items:
            type: string
        logoUrl:
          type: string
    MenuItemStructure:
      type: object
      properties:
        version:
          format: int32
          type: integer
        creationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        creationUser:
          type: string
        modificationDate:
          $ref: '#/components/schemas/OffsetDateTime'
        modificationUser:
          type: string
        id:
          type: string
        key:
          type: string
        name:
          type: string
        description:
          type: string
        url:
          type: string
        portalName:
          type: string
        applicationId:
          type: string
        disabled:
          type: boolean
        position:
          format: int32
          type: integer
        badge:
          type: string
        portalExit:
          type: boolean
        parentItemId:
          type: string
        i18n:
          type: object
          additionalProperties:
            type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/MenuItemStructure'
        roles:
          type: array
          items:
            type: string
    Theme:
      description: Theme data
      required:
        - name
      type: object
      properties:
        id:
          type: string
        version:
          format: int32
          type: integer
        name:
          minLength: 2
          type: string
        cssFile:
          type: string
        description:
          type: string
        assetsUrl:
          type: string
        logoUrl:
          type: string
        faviconUrl:
          type: string
        previewImageUrl:
          type: string
        assetsUpdateDate:
          type: string
        properties:
          type: object
    ImportTheme:
      description: Theme data
      required:
        - name
      type: object
      properties:
        version:
          format: int32
          type: integer
        name:
          minLength: 2
          type: string
        cssFile:
          type: string
        description:
          type: string
        assetsUrl:
          type: string
        logoUrl:
          type: string
        faviconUrl:
          type: string
        previewImageUrl:
          type: string
        assetsUpdateDate:
          type: string
        properties:
          type: object
    SearchTemplateSearchCriteria:
      type: object
      properties:
        user:
          type: string
        application:
          type: string
        page:
          type: string
        includeGlobal:
          type: boolean